require_relative '../../node_modules/@capacitor/ios/scripts/pods_helpers'
# Force CocoaPods to avoid XCFileLists generation (helps with Xcode 15/16 issues)
# ENV['COCOAPODS_DISABLE_INPUT_OUTPUT_PATHS'] = 'YES'

platform :ios, '14.0'
use_frameworks! :linkage => :dynamic

# Disable CocoaPods input/output file lists (fixes xcfilelist errors on Xcode 15/16)
install! 'cocoapods'

def capacitor_pods
  pod 'Capacitor', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorCordova', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorGeolocation', :path => '../../node_modules/@capacitor/geolocation'
  pod 'CapacitorSplashScreen', :path => '../../node_modules/@capacitor/splash-screen'
end

target 'App' do
  capacitor_pods
  pod 'IONGeolocationLib', '~> 1.0'
  # Add your Pods here
end

post_install do |installer|
  assertDeploymentTarget(installer)

  # Set minimum iOS and disable user script sandboxing
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      config.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'NO'
      # Workaround for Apple Silicon simulators when pods/frameworks lack arm64-simulator slice
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
  end

  # Apply the same to the user project
  installer.aggregate_targets.each do |aggregate_target|
    project = aggregate_target.user_project
    project.build_configurations.each do |config|
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '14.0'
      config.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'NO'
      config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = 'arm64'
    end
    project.save
  end
end